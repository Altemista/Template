name: microservices-tsf
displayName: Basic TSF microservice infrastructure
type: base

categories:
  - Scafolding

version: 1.0
license: nttdata
channel: https://mm.nttdata-labs.com/emea-lab/channels/town-square

prerequisites:
  - name: Java
    type: software
    description: Java is needed to compile the code
    link: https://www.java.com/en/download/
  - name: Maven
    type: tool
    description: Maven is needed to build and run the projects
    link: http://maven.com

description: Template to generate an infrastructure of microservices based on spring netflix by using TSF+
longDescription: |
  This template generates a TSF+ Microservice infrastructure The TSF+ Microservice nature is an application nature that allows the creation of standalone Spring Boot-based 
  applications for a microservice infrastructure implementation.
  See below the picture about the architecture that the template will create
  
  ![Accessing the sample application](https://raw.githubusercontent.com/acortcab/TSF-template/master/pics/architecture.PNG =531x166)
  
  ### Features
  As you can see there are 4 main components:
  
  * **Eureka server**: Eureka is a REST based service that is used for locating services for the purpose of load balancing and failover of middle-tier servers.
  * **Config server**: With the Config Server you have a central place to manage external properties for applications across all environments.
  * **Gateway**: It is the front door for all requests from devices and web sites to an application backend
  * **Microservice application**: Here we can develop our first microservice
  
  It is possible to customize some properties using the Altemista CLI. For example, if you want to change the config server url by yourself then generate the code with the following comand:
  
  ```bash
  $ altemista new microservices-tsf -- configServerURL=yourURL
  ```
  
  To learn more about TSF+ infrastructure:
  [https://terasoluna.everis.com/dev/TSFplus%20Reference%20Documentation.html#microservices-infrastructure-feature](https://terasoluna.everis.com/dev/TSFplus%20Reference%20Documentation.html#microservices-infrastructure-feature)
  ### Next Steps
  
  After code generation, the program can be executed by using startInfrastructure.bat. In order to test it
  * Go to locahost:8761 to see the instances
  
  ![Accessing the sample application](https://raw.githubusercontent.com/acortcab/TSF-template/master/pics/eureka.PNG =531x166)
  
  * And finally, use a program like Postman to test it the endpoint of the microservice. By default there is a operation which reques is a POST request, you can find out the port where the microservice starts, checking in eureka server. Base on this, the url could be:
    **POST localhost:8080/exampleMethod**
  
after: |
  
  Next Steps:
  After code generation, just execute startInfrastructure.bat to run the infrastructure. Please, be patience the first time you run the script as it takes some time to finish the process because it is necessary to download all dependencies which TSF+ needs to run correctly.
  Go to the browser to see your eureka instance and the rest of the components
provider: 'NTT Data'
createdAt: '2020-01-30T00:00:00Z'
maintainers:
  - name: 'Alberto Cortes Cabello'
    email: Alberto Cortes Cabello <alberto.cortes.cabello@everis.com>

commands:
- mvn tsf:micros-infrastructure -DgroupId=$groupId -DartifactId=$eureka -DterasolunaPlusVersion=2.0.0.RELEASE -s /usr/share/maven/conf/settings.xml 
- cd $eureka/$eureka-boot
- mvn tsf:feature -Dfeature=microservice-infrastructure-registry -Dlocation=/tmp/$eureka/$eureka-boot -DconfigServerURL=$configServerURL -s /usr/share/maven/conf/settings.xml
- cd .. && cd ..
- mvn tsf:micros-infrastructure -DgroupId=$groupId -DartifactId=$config -DterasolunaPlusVersion=2.0.0.RELEASE -s /usr/share/maven/conf/settings.xml
- cd $config/$config-boot
- mvn tsf:feature -Dfeature=microservice-infrastructure-config -Dlocation=/tmp/$config/$config-boot -DnativeSearchLocation=$nativeSearchLocation -s /usr/share/maven/conf/settings.xml
- cd .. && cd ..
- mvn tsf:micros-infrastructure -DgroupId=$groupId -DartifactId=$gateway -DterasolunaPlusVersion=2.0.0.RELEASE -s /usr/share/maven/conf/settings.xml
- cd $gateway/$gateway-boot
- mvn tsf:feature -Dfeature=microservice-infrastructure-gateway -Dlocation=/tmp/$gateway/$gateway-boot -DconfigServerURL=$configServerURL -s /usr/share/maven/conf/settings.xml
- cd .. && cd ..
- mvn tsf:micros-application -DgroupId=$groupId -DartifactId=$micro -DterasolunaPlusVersion=2.0.0.RELEASE -s /usr/share/maven/conf/settings.xml
- unzip /usr/share//startInfrastructureWindows.zip
- sed -i -- 's/eureka_toChange/$eureka/g' /tmp/startInfrastructure.bat
- sed -i -- 's/config_toChange/$config/g' /tmp/startInfrastructure.bat
- sed -i -- 's/gateway_toChange/$gateway/g' /tmp/startInfrastructure.bat
- sed -i -- 's/micro_toChange/$micro/g' /tmp/startInfrastructure.bat
 
parameters:
- type: input
  name: groupId
  message: Group id for creating the artifact
  default: com.mycompany
  
- type: input
  name: version
  message: version project
  default: 1.0.0-SNAPSHOT
  
- type: input
  name: eureka
  message: Registry name
  default: eureka
  
- type: input
  name: configServerURL
  message: The Config Server URL
  default: http://localhost:8888  
  
- type: input
  name: config
  message: Config name
  default: config-server
  
- type: input
  name: nativeSearchLocation
  message: The filesystem path where is the environment configuration files.
  default: classpath:/config/localconfig  
  
- type: input
  name: gateway
  message: Gateway name
  default: gateway-server  
  
- type: input
  name: micro
  message: Micro name
  default: micro-example

icon:
- base64data: 
  mediatype: image/png
